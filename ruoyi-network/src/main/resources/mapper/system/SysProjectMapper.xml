<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.network.mapper.SysProjectMapper">
    
    <resultMap type="SysProject" id="SysProjectResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="content"    column="content"    />
        <result property="state"    column="state"    />
        <result property="createTime"    column="create_time"    />
        <result property="createId"    column="create_id"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSysProjectVo">
        select id, name, content, state, create_time, create_id, update_time from sys_project
    </sql>

    <select id="selectSysProjectList" parameterType="SysProject" resultMap="SysProjectResult">
        <include refid="selectSysProjectVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="state != null "> and state = #{state}</if>
            <if test="createId != null "> and create_id = #{createId}</if>
        </where>
    </select>
    
    <select id="selectSysProjectById" parameterType="Long" resultMap="SysProjectResult">
        <include refid="selectSysProjectVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSysProject" parameterType="SysProject" useGeneratedKeys="true" keyProperty="id">
        insert into sys_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="content != null">content,</if>
            <if test="state != null">state,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createId != null">create_id,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="content != null">#{content},</if>
            <if test="state != null">#{state},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createId != null">#{createId},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSysProject" parameterType="SysProject">
        update sys_project
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="content != null">content = #{content},</if>
            <if test="state != null">state = #{state},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createId != null">create_id = #{createId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSysProjectById" parameterType="Long">
        delete from sys_project where id = #{id}
    </delete>

    <delete id="deleteSysProjectByIds" parameterType="String">
        delete from sys_project where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="SysProjectByUserId" parameterType="Long" resultType="SysProject">
select project_id as 'id'
from role_project where role_id in
(select  role_id
from sys_user_role
where user_id = #{userId})
    </select>
    <select id="SysUserProjectByUserId"  parameterType="Long" resultType="SysProject">
  select project_id as 'id'
  from sys_user_project
   where user_id = #{userId}
    </select>
    <select id="selectRoleByUserId"  parameterType="Long" resultType="com.ruoyi.network.domain.SysUserRole">
  select user_id as 'userId',role_id as 'roleId'
  from sys_user_role
   where user_id = #{userId}
    </select>

    <insert id="insertSysProjectUserId" parameterType="SysProject">
       insert into sys_user_project(user_id,project_id) values (#{createId},#{id})
    </insert>
    <select id="selectSysProject"  parameterType="SysProject" resultType="SysProject">
   select id
   from sys_project
   where  name = #{name} and create_id = #{createId}
    </select>
    <select id="selectSysProjectByUserId"  parameterType="Long" resultType="SysProject">
  select *
  from sys_project
   where create_id = #{userId}
    </select>
</mapper>