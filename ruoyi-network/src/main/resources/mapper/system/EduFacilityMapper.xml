<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.network.mapper.EduFacilityMapper">
    
    <resultMap type="EduFacility" id="EduFacilityResult">
        <result property="id"    column="id"    />
        <result property="batchId"    column="batch_id"    />
        <result property="areasName"    column="areas_name"    />
        <result property="areasFunction"    column="areas_function"    />
        <result property="areasCover"    column="areas_cover"    />
        <result property="prue"    column="prue"    />
    </resultMap>

    <sql id="selectEduFacilityVo">
        select id, batch_id, areas_name, areas_function, areas_cover, prue from edu_facility
    </sql>

    <select id="selectEduFacilityList" parameterType="EduFacility" resultMap="EduFacilityResult">
        <include refid="selectEduFacilityVo"/>
        <where>  
            <if test="batchId != null "> and batch_id = #{batchId}</if>
            <if test="areasName != null  and areasName != ''"> and areas_name like concat('%', #{areasName}, '%')</if>
            <if test="areasFunction != null  and areasFunction != ''"> and areas_function = #{areasFunction}</if>
            <if test="areasCover != null  and areasCover != ''"> and areas_cover = #{areasCover}</if>
            <if test="prue != null  and prue != ''"> and prue = #{prue}</if>
        </where>
    </select>
    
    <select id="selectEduFacilityById" parameterType="Long" resultMap="EduFacilityResult">
        <include refid="selectEduFacilityVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertEduFacility" parameterType="EduFacility" useGeneratedKeys="true" keyProperty="id">
        insert into edu_facility
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="batchId != null">batch_id,</if>
            <if test="areasName != null">areas_name,</if>
            <if test="areasFunction != null">areas_function,</if>
            <if test="areasCover != null">areas_cover,</if>
            <if test="prue != null">prue,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="batchId != null">#{batchId},</if>
            <if test="areasName != null">#{areasName},</if>
            <if test="areasFunction != null">#{areasFunction},</if>
            <if test="areasCover != null">#{areasCover},</if>
            <if test="prue != null">#{prue},</if>
         </trim>
    </insert>

    <update id="updateEduFacility" parameterType="EduFacility">
        update edu_facility
        <trim prefix="SET" suffixOverrides=",">
            <if test="batchId != null">batch_id = #{batchId},</if>
            <if test="areasName != null">areas_name = #{areasName},</if>
            <if test="areasFunction != null">areas_function = #{areasFunction},</if>
            <if test="areasCover != null">areas_cover = #{areasCover},</if>
            <if test="prue != null">prue = #{prue},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEduFacilityById" parameterType="Long">
        delete from edu_facility where id = #{id}
    </delete>

    <delete id="deleteEduFacilityByIds" parameterType="String">
        delete from edu_facility where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insertEduFacilityList" parameterType="EduFacility" >
        insert into edu_facility(batch_id,areas_name,areas_function,areas_cover,prue)
        values
        <foreach item="facilities" collection="list" separator=",">
            (#{facilities.batchId},#{facilities.areasName},#{facilities.areasFunction},#{facilities.areasCover},#{facilities.prue})
        </foreach>
    </insert>
    <delete id="deleteEduFacilityByUserId" parameterType="Long">
        delete from edu_facility where batch_id = #{userId}
    </delete>
</mapper>