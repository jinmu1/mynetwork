<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.EduReplenishmentMapper">
    
    <resultMap type="EduReplenishment" id="EduReplenishmentResult">
        <result property="id"    column="id"    />
        <result property="batchId"    column="batch_id"    />
        <result property="batchCode"    column="batch_code"    />
        <result property="createDate"    column="createDate"    />
        <result property="createTime"    column="createTime"    />
        <result property="storageLocation"    column="storage_location"    />
        <result property="goodsCode"    column="goods_code"    />
        <result property="goodsName"    column="goods_name"    />
        <result property="waitLocation"    column="wait_location"    />
        <result property="pieceNum"    column="piece_num"    />
        <result property="pulletNum"    column="pullet_num"    />
        <result property="warmArea"    column="warm_area"    />
    </resultMap>

    <sql id="selectEduReplenishmentVo">
        select id, batch_id, batch_code, createDate, createTime, storage_location, goods_code, goods_name, wait_location, piece_num, pullet_num, warm_area from edu_replenishment
    </sql>

    <select id="selectEduReplenishmentList" parameterType="EduReplenishment" resultMap="EduReplenishmentResult">
        <include refid="selectEduReplenishmentVo"/>
        <where>  
            <if test="batchId != null "> and batch_id = #{batchId}</if>
            <if test="batchCode != null  and batchCode != ''"> and batch_code = #{batchCode}</if>
            <if test="createDate != null "> and createDate = #{createDate}</if>
            <if test="createTime != null "> and createTime = #{createTime}</if>
            <if test="storageLocation != null  and storageLocation != ''"> and storage_location = #{storageLocation}</if>
            <if test="goodsCode != null  and goodsCode != ''"> and goods_code = #{goodsCode}</if>
            <if test="goodsName != null  and goodsName != ''"> and goods_name like concat('%', #{goodsName}, '%')</if>
            <if test="waitLocation != null  and waitLocation != ''"> and wait_location = #{waitLocation}</if>
            <if test="pieceNum != null "> and piece_num = #{pieceNum}</if>
            <if test="pulletNum != null "> and pullet_num = #{pulletNum}</if>
            <if test="warmArea != null  and warmArea != ''"> and warm_area = #{warmArea}</if>
        </where>
    </select>
    
    <select id="selectEduReplenishmentById" parameterType="Long" resultMap="EduReplenishmentResult">
        <include refid="selectEduReplenishmentVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertEduReplenishment" parameterType="EduReplenishment" useGeneratedKeys="true" keyProperty="id">
        insert into edu_replenishment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="batchId != null">batch_id,</if>
            <if test="batchCode != null">batch_code,</if>
            <if test="createDate != null">createDate,</if>
            <if test="createTime != null">createTime,</if>
            <if test="storageLocation != null">storage_location,</if>
            <if test="goodsCode != null">goods_code,</if>
            <if test="goodsName != null">goods_name,</if>
            <if test="waitLocation != null">wait_location,</if>
            <if test="pieceNum != null">piece_num,</if>
            <if test="pulletNum != null">pullet_num,</if>
            <if test="warmArea != null">warm_area,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="batchId != null">#{batchId},</if>
            <if test="batchCode != null">#{batchCode},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="storageLocation != null">#{storageLocation},</if>
            <if test="goodsCode != null">#{goodsCode},</if>
            <if test="goodsName != null">#{goodsName},</if>
            <if test="waitLocation != null">#{waitLocation},</if>
            <if test="pieceNum != null">#{pieceNum},</if>
            <if test="pulletNum != null">#{pulletNum},</if>
            <if test="warmArea != null">#{warmArea},</if>
         </trim>
    </insert>

    <update id="updateEduReplenishment" parameterType="EduReplenishment">
        update edu_replenishment
        <trim prefix="SET" suffixOverrides=",">
            <if test="batchId != null">batch_id = #{batchId},</if>
            <if test="batchCode != null">batch_code = #{batchCode},</if>
            <if test="createDate != null">createDate = #{createDate},</if>
            <if test="createTime != null">createTime = #{createTime},</if>
            <if test="storageLocation != null">storage_location = #{storageLocation},</if>
            <if test="goodsCode != null">goods_code = #{goodsCode},</if>
            <if test="goodsName != null">goods_name = #{goodsName},</if>
            <if test="waitLocation != null">wait_location = #{waitLocation},</if>
            <if test="pieceNum != null">piece_num = #{pieceNum},</if>
            <if test="pulletNum != null">pullet_num = #{pulletNum},</if>
            <if test="warmArea != null">warm_area = #{warmArea},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEduReplenishmentById" parameterType="Long">
        delete from edu_replenishment where id = #{id}
    </delete>

    <delete id="deleteEduReplenishmentByIds" parameterType="String">
        delete from edu_replenishment where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insertEduReplenishmentList" parameterType="EduReplenishment" >
        insert into edu_replenishment(batch_id,batch_code,createDate,createTime,storage_location,goods_code,goods_name,wait_location,pullet_num,piece_num,warm_area)
        values
        <foreach item="replenishment" collection="list" separator=",">
            (#{replenishment.batchId},#{replenishment.batchCode},#{replenishment.createDate},#{replenishment.createTime},#{replenishment.storageLocation},#{replenishment.goodsCode},#{replenishment.goodsName},#{replenishment.waitLocation},#{replenishment.pulletNum},#{replenishment.pieceNum},#{replenishment.warmArea})
        </foreach>
    </insert>
    <delete id="deleteEduReplenishmentByUserId" parameterType="Long">
        delete from edu_replenishment where batch_id = #{userId}
    </delete>
    <select id="getTime" parameterType="Long" resultMap="EduReplenishmentResult">
select a.createTime as 'createTime',count(distinct batch_code) as 'piece_num'
from
(select  DATE_FORMAT(createTime,'%T') as 'createTime',batch_code as 'batch_code'
from edu_replenishment
where batch_id =#{userId}) a
group by a.createTime
    </select>
    <select id="getDays" parameterType="Long" resultMap="EduReplenishmentResult">
select createDate,count(distinct batch_code) as 'batch_code'
from edu_replenishment
group by createDate
    </select>
    <select id="getGoodsNum" parameterType="Long" resultMap="EduReplenishmentResult">
select createDate,sum(pullet_num) as 'pullet_num'
from edu_replenishment
group by createDate
    </select>
    <select id="getGoodsType" parameterType="Long" resultMap="EduReplenishmentResult">
select count(distinct(delivery_date)) as 'piece_num',goods_code
from edu_delivery
where batch_id ='345'
group by goods_code

    </select>
</mapper>